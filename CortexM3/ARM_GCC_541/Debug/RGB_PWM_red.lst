ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RGB_PWM_red.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RGB_PWM_red_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	RGB_PWM_red_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	RGB_PWM_red_Enable, %function
  25              	RGB_PWM_red_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\RGB_PWM_red.c"
   1:Generated_Source\PSoC5/RGB_PWM_red.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RGB_PWM_red.c **** * File Name: RGB_PWM_red.c
   3:Generated_Source\PSoC5/RGB_PWM_red.c **** * Version 3.30
   4:Generated_Source\PSoC5/RGB_PWM_red.c **** *
   5:Generated_Source\PSoC5/RGB_PWM_red.c **** * Description:
   6:Generated_Source\PSoC5/RGB_PWM_red.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/RGB_PWM_red.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/RGB_PWM_red.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/RGB_PWM_red.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/RGB_PWM_red.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/RGB_PWM_red.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/RGB_PWM_red.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/RGB_PWM_red.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  15:Generated_Source\PSoC5/RGB_PWM_red.c **** * Note:
  16:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  17:Generated_Source\PSoC5/RGB_PWM_red.c **** *******************************************************************************
  18:Generated_Source\PSoC5/RGB_PWM_red.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/RGB_PWM_red.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/RGB_PWM_red.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/RGB_PWM_red.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/RGB_PWM_red.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  24:Generated_Source\PSoC5/RGB_PWM_red.c **** #include "RGB_PWM_red.h"
  25:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  26:Generated_Source\PSoC5/RGB_PWM_red.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/RGB_PWM_red.c **** #ifdef RGB_PWM_red_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/RGB_PWM_red.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/RGB_PWM_red.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* RGB_PWM_red_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 2


  31:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  32:Generated_Source\PSoC5/RGB_PWM_red.c **** uint8 RGB_PWM_red_initVar = 0u;
  33:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  34:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  35:Generated_Source\PSoC5/RGB_PWM_red.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/RGB_PWM_red.c **** * Function Name: RGB_PWM_red_Start
  37:Generated_Source\PSoC5/RGB_PWM_red.c **** ********************************************************************************
  38:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  39:Generated_Source\PSoC5/RGB_PWM_red.c **** * Summary:
  40:Generated_Source\PSoC5/RGB_PWM_red.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/RGB_PWM_red.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/RGB_PWM_red.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  44:Generated_Source\PSoC5/RGB_PWM_red.c **** * Parameters:
  45:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
  46:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  47:Generated_Source\PSoC5/RGB_PWM_red.c **** * Return:
  48:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
  49:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  50:Generated_Source\PSoC5/RGB_PWM_red.c **** * Global variables:
  51:Generated_Source\PSoC5/RGB_PWM_red.c **** *  RGB_PWM_red_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/RGB_PWM_red.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  54:Generated_Source\PSoC5/RGB_PWM_red.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/RGB_PWM_red.c **** void RGB_PWM_red_Start(void) 
  56:Generated_Source\PSoC5/RGB_PWM_red.c **** {
  57:Generated_Source\PSoC5/RGB_PWM_red.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/RGB_PWM_red.c ****     if(RGB_PWM_red_initVar == 0u)
  59:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
  60:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_Init();
  61:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_initVar = 1u;
  62:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
  63:Generated_Source\PSoC5/RGB_PWM_red.c ****     RGB_PWM_red_Enable();
  64:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  65:Generated_Source\PSoC5/RGB_PWM_red.c **** }
  66:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  67:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  68:Generated_Source\PSoC5/RGB_PWM_red.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/RGB_PWM_red.c **** * Function Name: RGB_PWM_red_Init
  70:Generated_Source\PSoC5/RGB_PWM_red.c **** ********************************************************************************
  71:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  72:Generated_Source\PSoC5/RGB_PWM_red.c **** * Summary:
  73:Generated_Source\PSoC5/RGB_PWM_red.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/RGB_PWM_red.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/RGB_PWM_red.c **** *  RGB_PWM_red_Start().
  76:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  77:Generated_Source\PSoC5/RGB_PWM_red.c **** * Parameters:
  78:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
  79:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  80:Generated_Source\PSoC5/RGB_PWM_red.c **** * Return:
  81:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
  82:Generated_Source\PSoC5/RGB_PWM_red.c **** *
  83:Generated_Source\PSoC5/RGB_PWM_red.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/RGB_PWM_red.c **** void RGB_PWM_red_Init(void) 
  85:Generated_Source\PSoC5/RGB_PWM_red.c **** {
  86:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UsingFixedFunction || RGB_PWM_red_UseControl)
  87:Generated_Source\PSoC5/RGB_PWM_red.c ****         uint8 ctrl;
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 3


  88:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UsingFixedFunction || RGB_PWM_red_UseControl) */
  89:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  90:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if(!RGB_PWM_red_UsingFixedFunction)
  91:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(RGB_PWM_red_UseStatus)
  92:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/RGB_PWM_red.c ****             uint8 RGB_PWM_red_interruptState;
  94:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_UseStatus) */
  95:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (!RGB_PWM_red_UsingFixedFunction) */
  96:Generated_Source\PSoC5/RGB_PWM_red.c **** 
  97:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UsingFixedFunction)
  98:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_CONTROL |= RGB_PWM_red_CFG0_MODE;
 100:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if (RGB_PWM_red_DeadBand2_4)
 101:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_CONTROL |= RGB_PWM_red_CFG0_DB;
 102:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_DeadBand2_4) */
 103:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 104:Generated_Source\PSoC5/RGB_PWM_red.c ****         ctrl = RGB_PWM_red_CONTROL3 & ((uint8 )(~RGB_PWM_red_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_CONTROL3 = ctrl | RGB_PWM_red_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 107:Generated_Source\PSoC5/RGB_PWM_red.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_RT1 &= ((uint8)(~RGB_PWM_red_RT1_MASK));
 109:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_RT1 |= RGB_PWM_red_SYNC;
 110:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 111:Generated_Source\PSoC5/RGB_PWM_red.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_RT1 &= ((uint8)(~RGB_PWM_red_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_RT1 |= RGB_PWM_red_SYNCDSI_EN;
 114:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 115:Generated_Source\PSoC5/RGB_PWM_red.c ****     #elif (RGB_PWM_red_UseControl)
 116:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/RGB_PWM_red.c ****         ctrl = RGB_PWM_red_CONTROL & ((uint8)(~RGB_PWM_red_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/RGB_PWM_red.c ****                 ((uint8)(~RGB_PWM_red_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_CONTROL = ctrl | RGB_PWM_red_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/RGB_PWM_red.c ****                                    RGB_PWM_red_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UsingFixedFunction) */
 122:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 123:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (!RGB_PWM_red_UsingFixedFunction)
 124:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if (RGB_PWM_red_Resolution == 8)
 125:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_AUX_CONTROLDP0 |= (RGB_PWM_red_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else /* (RGB_PWM_red_Resolution == 16)*/
 128:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_AUX_CONTROLDP0 |= (RGB_PWM_red_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_AUX_CONTROLDP1 |= (RGB_PWM_red_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_Resolution == 8) */
 132:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 133:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_WriteCounter(RGB_PWM_red_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (!RGB_PWM_red_UsingFixedFunction) */
 135:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 136:Generated_Source\PSoC5/RGB_PWM_red.c ****     RGB_PWM_red_WritePeriod(RGB_PWM_red_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 138:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if (RGB_PWM_red_UseOneCompareMode)
 139:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_WriteCompare(RGB_PWM_red_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 141:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_WriteCompare1(RGB_PWM_red_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_WriteCompare2(RGB_PWM_red_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_UseOneCompareMode) */
 144:Generated_Source\PSoC5/RGB_PWM_red.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 4


 145:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if (RGB_PWM_red_KillModeMinTime)
 146:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_WriteKillTime(RGB_PWM_red_MinimumKillTime);
 147:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_KillModeMinTime) */
 148:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 149:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if (RGB_PWM_red_DeadBandUsed)
 150:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_WriteDeadTime(RGB_PWM_red_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_DeadBandUsed) */
 152:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 153:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UseStatus || RGB_PWM_red_UsingFixedFunction)
 154:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_SetInterruptMode(RGB_PWM_red_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UseStatus || RGB_PWM_red_UsingFixedFunction) */
 156:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 157:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UsingFixedFunction)
 158:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_GLOBAL_ENABLE |= RGB_PWM_red_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_CONTROL2 |= RGB_PWM_red_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/RGB_PWM_red.c ****     #else
 163:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(RGB_PWM_red_UseStatus)
 164:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 165:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_STATUS_AUX_CTRL |= RGB_PWM_red_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 171:Generated_Source\PSoC5/RGB_PWM_red.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/RGB_PWM_red.c ****             CyExitCriticalSection(RGB_PWM_red_interruptState);
 173:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 174:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Clear the FIFO to enable the RGB_PWM_red_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/RGB_PWM_red.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_ClearFIFO();
 177:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_UseStatus) */
 178:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UsingFixedFunction) */
 179:Generated_Source\PSoC5/RGB_PWM_red.c **** }
 180:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 181:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 182:Generated_Source\PSoC5/RGB_PWM_red.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/RGB_PWM_red.c **** * Function Name: RGB_PWM_red_Enable
 184:Generated_Source\PSoC5/RGB_PWM_red.c **** ********************************************************************************
 185:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 186:Generated_Source\PSoC5/RGB_PWM_red.c **** * Summary:
 187:Generated_Source\PSoC5/RGB_PWM_red.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 189:Generated_Source\PSoC5/RGB_PWM_red.c **** * Parameters:
 190:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
 191:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 192:Generated_Source\PSoC5/RGB_PWM_red.c **** * Return:
 193:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
 194:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 195:Generated_Source\PSoC5/RGB_PWM_red.c **** * Side Effects:
 196:Generated_Source\PSoC5/RGB_PWM_red.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 198:Generated_Source\PSoC5/RGB_PWM_red.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/RGB_PWM_red.c **** void RGB_PWM_red_Enable(void) 
 200:Generated_Source\PSoC5/RGB_PWM_red.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/RGB_PWM_red.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UsingFixedFunction)
 203:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_GLOBAL_ENABLE |= RGB_PWM_red_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_GLOBAL_STBY_ENABLE |= RGB_PWM_red_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UsingFixedFunction) */
 206:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 207:Generated_Source\PSoC5/RGB_PWM_red.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UseControl || RGB_PWM_red_UsingFixedFunction)
 209:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_CONTROL |= RGB_PWM_red_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7E640040 		.word	1073767550
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	RGB_PWM_red_Enable, .-RGB_PWM_red_Enable
  46              		.section	.text.RGB_PWM_red_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	RGB_PWM_red_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	RGB_PWM_red_Stop, %function
  52              	RGB_PWM_red_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UseControl || RGB_PWM_red_UsingFixedFunction) */
 211:Generated_Source\PSoC5/RGB_PWM_red.c **** }
 212:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 213:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 214:Generated_Source\PSoC5/RGB_PWM_red.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/RGB_PWM_red.c **** * Function Name: RGB_PWM_red_Stop
 216:Generated_Source\PSoC5/RGB_PWM_red.c **** ********************************************************************************
 217:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 218:Generated_Source\PSoC5/RGB_PWM_red.c **** * Summary:
 219:Generated_Source\PSoC5/RGB_PWM_red.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/RGB_PWM_red.c **** *  interrupts.
 221:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 222:Generated_Source\PSoC5/RGB_PWM_red.c **** * Parameters:
 223:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
 224:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 225:Generated_Source\PSoC5/RGB_PWM_red.c **** * Return:
 226:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
 227:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 228:Generated_Source\PSoC5/RGB_PWM_red.c **** * Side Effects:
 229:Generated_Source\PSoC5/RGB_PWM_red.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/RGB_PWM_red.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 232:Generated_Source\PSoC5/RGB_PWM_red.c **** *******************************************************************************/
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 6


 233:Generated_Source\PSoC5/RGB_PWM_red.c **** void RGB_PWM_red_Stop(void) 
 234:Generated_Source\PSoC5/RGB_PWM_red.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UseControl || RGB_PWM_red_UsingFixedFunction)
 236:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_CONTROL &= ((uint8)(~RGB_PWM_red_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7E640040 		.word	1073767550
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	RGB_PWM_red_Stop, .-RGB_PWM_red_Stop
  72              		.section	.text.RGB_PWM_red_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	RGB_PWM_red_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	RGB_PWM_red_WriteCounter, %function
  78              	RGB_PWM_red_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UseControl || RGB_PWM_red_UsingFixedFunction) */
 238:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 239:Generated_Source\PSoC5/RGB_PWM_red.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UsingFixedFunction)
 241:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_GLOBAL_ENABLE &= ((uint8)(~RGB_PWM_red_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_GLOBAL_STBY_ENABLE &= ((uint8)(~RGB_PWM_red_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UsingFixedFunction) */
 244:Generated_Source\PSoC5/RGB_PWM_red.c **** }
 245:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 246:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (RGB_PWM_red_UseOneCompareMode)
 247:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_CompareMode1SW)
 248:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 249:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 250:Generated_Source\PSoC5/RGB_PWM_red.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Function Name: RGB_PWM_red_SetCompareMode
 252:Generated_Source\PSoC5/RGB_PWM_red.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 254:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Summary:
 255:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 258:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Parameters:
 259:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/RGB_PWM_red.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 262:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Return:
 263:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  None
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 7


 264:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 265:Generated_Source\PSoC5/RGB_PWM_red.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/RGB_PWM_red.c ****         void RGB_PWM_red_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/RGB_PWM_red.c ****         {
 268:Generated_Source\PSoC5/RGB_PWM_red.c ****             #if(RGB_PWM_red_UsingFixedFunction)
 269:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 270:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #if(0 != RGB_PWM_red_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/RGB_PWM_red.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << RGB_PWM_red_CTRL_CMPMO
 272:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #else
 273:Generated_Source\PSoC5/RGB_PWM_red.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #endif /* (0 != RGB_PWM_red_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 276:Generated_Source\PSoC5/RGB_PWM_red.c ****                 RGB_PWM_red_CONTROL3 &= ((uint8)(~RGB_PWM_red_CTRL_CMPMODE1_MASK)); /*Clear Existin
 277:Generated_Source\PSoC5/RGB_PWM_red.c ****                 RGB_PWM_red_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 279:Generated_Source\PSoC5/RGB_PWM_red.c ****             #elif (RGB_PWM_red_UseControl)
 280:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 281:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #if(0 != RGB_PWM_red_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/RGB_PWM_red.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << RGB_PWM_red_CTRL_CMPM
 283:Generated_Source\PSoC5/RGB_PWM_red.c ****                                                 RGB_PWM_red_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #else
 285:Generated_Source\PSoC5/RGB_PWM_red.c ****                     uint8 comparemode1masked = comparemode & RGB_PWM_red_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #endif /* (0 != RGB_PWM_red_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 288:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #if(0 != RGB_PWM_red_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/RGB_PWM_red.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << RGB_PWM_red_CTRL_CMPM
 290:Generated_Source\PSoC5/RGB_PWM_red.c ****                                                RGB_PWM_red_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #else
 292:Generated_Source\PSoC5/RGB_PWM_red.c ****                     uint8 comparemode2masked = comparemode & RGB_PWM_red_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/RGB_PWM_red.c ****                 #endif /* (0 != RGB_PWM_red_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 295:Generated_Source\PSoC5/RGB_PWM_red.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/RGB_PWM_red.c ****                 RGB_PWM_red_CONTROL &= ((uint8)(~(RGB_PWM_red_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/RGB_PWM_red.c ****                                             RGB_PWM_red_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/RGB_PWM_red.c ****                 RGB_PWM_red_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 300:Generated_Source\PSoC5/RGB_PWM_red.c ****             #else
 301:Generated_Source\PSoC5/RGB_PWM_red.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/RGB_PWM_red.c ****             #endif /* (RGB_PWM_red_UsingFixedFunction) */
 303:Generated_Source\PSoC5/RGB_PWM_red.c ****         }
 304:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* RGB_PWM_red_CompareMode1SW */
 305:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 306:Generated_Source\PSoC5/RGB_PWM_red.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 308:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_CompareMode1SW)
 309:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 310:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 311:Generated_Source\PSoC5/RGB_PWM_red.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Function Name: RGB_PWM_red_SetCompareMode1
 313:Generated_Source\PSoC5/RGB_PWM_red.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 315:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Summary:
 316:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 318:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Parameters:
 319:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/RGB_PWM_red.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 8


 321:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 322:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Return:
 323:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  None
 324:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 325:Generated_Source\PSoC5/RGB_PWM_red.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/RGB_PWM_red.c ****         void RGB_PWM_red_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/RGB_PWM_red.c ****         {
 328:Generated_Source\PSoC5/RGB_PWM_red.c ****             #if(0 != RGB_PWM_red_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/RGB_PWM_red.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << RGB_PWM_red_CTRL_CMPMODE1_
 330:Generated_Source\PSoC5/RGB_PWM_red.c ****                                            RGB_PWM_red_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/RGB_PWM_red.c ****             #else
 332:Generated_Source\PSoC5/RGB_PWM_red.c ****                 uint8 comparemodemasked = comparemode & RGB_PWM_red_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/RGB_PWM_red.c ****             #endif /* (0 != RGB_PWM_red_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 335:Generated_Source\PSoC5/RGB_PWM_red.c ****             #if (RGB_PWM_red_UseControl)
 336:Generated_Source\PSoC5/RGB_PWM_red.c ****                 RGB_PWM_red_CONTROL &= ((uint8)(~RGB_PWM_red_CTRL_CMPMODE1_MASK)); /*Clear existing
 337:Generated_Source\PSoC5/RGB_PWM_red.c ****                 RGB_PWM_red_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/RGB_PWM_red.c ****             #endif /* (RGB_PWM_red_UseControl) */
 339:Generated_Source\PSoC5/RGB_PWM_red.c ****         }
 340:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* RGB_PWM_red_CompareMode1SW */
 341:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 342:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (RGB_PWM_red_CompareMode2SW)
 343:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 344:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 345:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_SetCompareMode2
 347:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 349:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 350:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 352:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 353:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/RGB_PWM_red.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 356:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 357:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 358:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 359:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/RGB_PWM_red.c ****     void RGB_PWM_red_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 362:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 363:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(0 != RGB_PWM_red_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/RGB_PWM_red.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << RGB_PWM_red_CTRL_CMPMODE2_SHIF
 365:Generated_Source\PSoC5/RGB_PWM_red.c ****                                                  RGB_PWM_red_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 367:Generated_Source\PSoC5/RGB_PWM_red.c ****             uint8 comparemodemasked = comparemode & RGB_PWM_red_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (0 != RGB_PWM_red_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 370:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if (RGB_PWM_red_UseControl)
 371:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_CONTROL &= ((uint8)(~RGB_PWM_red_CTRL_CMPMODE2_MASK)); /*Clear existing mod
 372:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_UseControl) */
 374:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 375:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /*RGB_PWM_red_CompareMode2SW */
 376:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 377:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 9


 378:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 379:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 380:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (!RGB_PWM_red_UsingFixedFunction)
 381:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 382:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 383:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_WriteCounter
 385:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 387:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 388:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 393:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 394:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 396:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 397:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 398:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 399:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Side Effects:
 400:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 402:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/RGB_PWM_red.c ****     void RGB_PWM_red_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/RGB_PWM_red.c ****                                        
 405:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/RGB_PWM_red.c ****         CY_SET_REG8(RGB_PWM_red_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 0F640040 		.word	1073767439
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	RGB_PWM_red_WriteCounter, .-RGB_PWM_red_WriteCounter
  97              		.section	.text.RGB_PWM_red_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	RGB_PWM_red_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	RGB_PWM_red_ReadCounter, %function
 103              	RGB_PWM_red_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 408:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 409:Generated_Source\PSoC5/RGB_PWM_red.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 10


 410:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_ReadCounter
 412:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 414:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 415:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 418:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 419:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 420:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 421:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 422:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 424:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/RGB_PWM_red.c ****     uint8 RGB_PWM_red_ReadCounter(void) 
 426:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/RGB_PWM_red.c ****           (void)CY_GET_REG8(RGB_PWM_red_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 432:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/RGB_PWM_red.c ****         return (CY_GET_REG8(RGB_PWM_red_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 1F640040 		.word	1073767455
 122 0010 5F640040 		.word	1073767519
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	RGB_PWM_red_ReadCounter, .-RGB_PWM_red_ReadCounter
 126              		.section	.text.RGB_PWM_red_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	RGB_PWM_red_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	RGB_PWM_red_WritePeriod, %function
 132              	RGB_PWM_red_WritePeriod:
 133              	.LFB6:
 435:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 436:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UseStatus)
 437:Generated_Source\PSoC5/RGB_PWM_red.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 11


 438:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 439:Generated_Source\PSoC5/RGB_PWM_red.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Function Name: RGB_PWM_red_ClearFIFO
 441:Generated_Source\PSoC5/RGB_PWM_red.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 443:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Summary:
 444:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 446:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Parameters:
 447:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  None
 448:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 449:Generated_Source\PSoC5/RGB_PWM_red.c ****         * Return:
 450:Generated_Source\PSoC5/RGB_PWM_red.c ****         *  None
 451:Generated_Source\PSoC5/RGB_PWM_red.c ****         *
 452:Generated_Source\PSoC5/RGB_PWM_red.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/RGB_PWM_red.c ****         void RGB_PWM_red_ClearFIFO(void) 
 454:Generated_Source\PSoC5/RGB_PWM_red.c ****         {
 455:Generated_Source\PSoC5/RGB_PWM_red.c ****             while(0u != (RGB_PWM_red_ReadStatusRegister() & RGB_PWM_red_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/RGB_PWM_red.c ****             {
 457:Generated_Source\PSoC5/RGB_PWM_red.c ****                 (void)RGB_PWM_red_ReadCapture();
 458:Generated_Source\PSoC5/RGB_PWM_red.c ****             }
 459:Generated_Source\PSoC5/RGB_PWM_red.c ****         }
 460:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 461:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* RGB_PWM_red_UseStatus */
 462:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 463:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* !RGB_PWM_red_UsingFixedFunction */
 464:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 465:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 466:Generated_Source\PSoC5/RGB_PWM_red.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/RGB_PWM_red.c **** * Function Name: RGB_PWM_red_WritePeriod
 468:Generated_Source\PSoC5/RGB_PWM_red.c **** ********************************************************************************
 469:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 470:Generated_Source\PSoC5/RGB_PWM_red.c **** * Summary:
 471:Generated_Source\PSoC5/RGB_PWM_red.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/RGB_PWM_red.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 474:Generated_Source\PSoC5/RGB_PWM_red.c **** * Parameters:
 475:Generated_Source\PSoC5/RGB_PWM_red.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/RGB_PWM_red.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 478:Generated_Source\PSoC5/RGB_PWM_red.c **** * Return:
 479:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
 480:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 481:Generated_Source\PSoC5/RGB_PWM_red.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/RGB_PWM_red.c **** void RGB_PWM_red_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/RGB_PWM_red.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if(RGB_PWM_red_UsingFixedFunction)
 485:Generated_Source\PSoC5/RGB_PWM_red.c ****         CY_SET_REG16(RGB_PWM_red_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/RGB_PWM_red.c ****     #else
 487:Generated_Source\PSoC5/RGB_PWM_red.c ****         CY_SET_REG8(RGB_PWM_red_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 4F640040 		.word	1073767503
 148              		.cfi_endproc
 149              	.LFE6:
 150              		.size	RGB_PWM_red_WritePeriod, .-RGB_PWM_red_WritePeriod
 151              		.section	.text.RGB_PWM_red_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	RGB_PWM_red_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	RGB_PWM_red_WriteCompare, %function
 157              	RGB_PWM_red_WriteCompare:
 158              	.LFB7:
 488:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UsingFixedFunction) */
 489:Generated_Source\PSoC5/RGB_PWM_red.c **** }
 490:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 491:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (RGB_PWM_red_UseOneCompareMode)
 492:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 493:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 494:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_WriteCompare
 496:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 498:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 499:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 505:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 506:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 508:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 509:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 510:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 511:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Side Effects:
 512:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 515:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/RGB_PWM_red.c ****     void RGB_PWM_red_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/RGB_PWM_red.c ****                                        
 518:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(RGB_PWM_red_UsingFixedFunction)
 520:Generated_Source\PSoC5/RGB_PWM_red.c ****             CY_SET_REG16(RGB_PWM_red_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 13


 521:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 522:Generated_Source\PSoC5/RGB_PWM_red.c ****             CY_SET_REG8(RGB_PWM_red_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 2F640040 		.word	1073767471
 173              		.cfi_endproc
 174              	.LFE7:
 175              		.size	RGB_PWM_red_WriteCompare, .-RGB_PWM_red_WriteCompare
 176              		.section	.text.RGB_PWM_red_Init,"ax",%progbits
 177              		.align	2
 178              		.global	RGB_PWM_red_Init
 179              		.thumb
 180              		.thumb_func
 181              		.type	RGB_PWM_red_Init, %function
 182              	RGB_PWM_red_Init:
 183              	.LFB1:
  85:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if (RGB_PWM_red_UsingFixedFunction || RGB_PWM_red_UseControl)
 184              		.loc 1 85 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 3, -8
 191              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/RGB_PWM_red.c ****                 ((uint8)(~RGB_PWM_red_CTRL_CMPMODE1_MASK));
 192              		.loc 1 117 0
 193 0002 0B4A     		ldr	r2, .L21
 194 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 195 0006 03F0C003 		and	r3, r3, #192
 196              	.LVL3:
 119:Generated_Source\PSoC5/RGB_PWM_red.c ****                                    RGB_PWM_red_DEFAULT_COMPARE1_MODE;
 197              		.loc 1 119 0
 198 000a 43F00903 		orr	r3, r3, #9
 199              	.LVL4:
 200 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else /* (RGB_PWM_red_Resolution == 16)*/
 201              		.loc 1 126 0
 202 0010 2132     		adds	r2, r2, #33
 203 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 204 0014 43F00103 		orr	r3, r3, #1
 205 0018 1370     		strb	r3, [r2]
 133:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (!RGB_PWM_red_UsingFixedFunction) */
 206              		.loc 1 133 0
 207 001a FF20     		movs	r0, #255
 208 001c FFF7FEFF 		bl	RGB_PWM_red_WriteCounter
 209              	.LVL5:
 136:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 210              		.loc 1 136 0
 211 0020 FF20     		movs	r0, #255
 212 0022 FFF7FEFF 		bl	RGB_PWM_red_WritePeriod
 213              	.LVL6:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 14


 139:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 214              		.loc 1 139 0
 215 0026 0020     		movs	r0, #0
 216 0028 FFF7FEFF 		bl	RGB_PWM_red_WriteCompare
 217              	.LVL7:
 218 002c 08BD     		pop	{r3, pc}
 219              	.L22:
 220 002e 00BF     		.align	2
 221              	.L21:
 222 0030 7E640040 		.word	1073767550
 223              		.cfi_endproc
 224              	.LFE1:
 225              		.size	RGB_PWM_red_Init, .-RGB_PWM_red_Init
 226              		.section	.text.RGB_PWM_red_Start,"ax",%progbits
 227              		.align	2
 228              		.global	RGB_PWM_red_Start
 229              		.thumb
 230              		.thumb_func
 231              		.type	RGB_PWM_red_Start, %function
 232              	RGB_PWM_red_Start:
 233              	.LFB0:
  56:Generated_Source\PSoC5/RGB_PWM_red.c ****     /* If not Initialized then initialize all required hardware and software */
 234              		.loc 1 56 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 242              		.loc 1 58 0
 243 0002 054B     		ldr	r3, .L26
 244 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245 0006 23B9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/RGB_PWM_red.c ****         RGB_PWM_red_initVar = 1u;
 246              		.loc 1 60 0
 247 0008 FFF7FEFF 		bl	RGB_PWM_red_Init
 248              	.LVL8:
  61:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 249              		.loc 1 61 0
 250 000c 0122     		movs	r2, #1
 251 000e 024B     		ldr	r3, .L26
 252 0010 1A70     		strb	r2, [r3]
 253              	.L24:
  63:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 254              		.loc 1 63 0
 255 0012 FFF7FEFF 		bl	RGB_PWM_red_Enable
 256              	.LVL9:
 257 0016 08BD     		pop	{r3, pc}
 258              	.L27:
 259              		.align	2
 260              	.L26:
 261 0018 00000000 		.word	.LANCHOR0
 262              		.cfi_endproc
 263              	.LFE0:
 264              		.size	RGB_PWM_red_Start, .-RGB_PWM_red_Start
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 15


 265              		.section	.text.RGB_PWM_red_ReadControlRegister,"ax",%progbits
 266              		.align	2
 267              		.global	RGB_PWM_red_ReadControlRegister
 268              		.thumb
 269              		.thumb_func
 270              		.type	RGB_PWM_red_ReadControlRegister, %function
 271              	RGB_PWM_red_ReadControlRegister:
 272              	.LFB8:
 523:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_UsingFixedFunction) */
 524:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 525:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if (RGB_PWM_red_PWMMode == RGB_PWM_red__B_PWM__DITHER)
 526:Generated_Source\PSoC5/RGB_PWM_red.c ****             #if(RGB_PWM_red_UsingFixedFunction)
 527:Generated_Source\PSoC5/RGB_PWM_red.c ****                 CY_SET_REG16(RGB_PWM_red_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/RGB_PWM_red.c ****             #else
 529:Generated_Source\PSoC5/RGB_PWM_red.c ****                 CY_SET_REG8(RGB_PWM_red_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/RGB_PWM_red.c ****             #endif /* (RGB_PWM_red_UsingFixedFunction) */
 531:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_PWMMode == RGB_PWM_red__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 533:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 534:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 535:Generated_Source\PSoC5/RGB_PWM_red.c **** #else
 536:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 537:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 538:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_WriteCompare1
 540:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 542:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 543:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 548:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 549:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 551:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 552:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 553:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 554:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/RGB_PWM_red.c ****     void RGB_PWM_red_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/RGB_PWM_red.c ****                                         
 557:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 558:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(RGB_PWM_red_UsingFixedFunction)
 559:Generated_Source\PSoC5/RGB_PWM_red.c ****             CY_SET_REG16(RGB_PWM_red_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 561:Generated_Source\PSoC5/RGB_PWM_red.c ****             CY_SET_REG8(RGB_PWM_red_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_UsingFixedFunction) */
 563:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 564:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 565:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 566:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_WriteCompare2
 568:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 570:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 571:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This funtion is used to change the compare value, for compare1 output.
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 16


 572:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  mode.
 576:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 577:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 578:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 580:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 581:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 582:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 583:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/RGB_PWM_red.c ****     void RGB_PWM_red_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/RGB_PWM_red.c ****                                         
 586:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 587:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(RGB_PWM_red_UsingFixedFunction)
 588:Generated_Source\PSoC5/RGB_PWM_red.c ****             CY_SET_REG16(RGB_PWM_red_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 590:Generated_Source\PSoC5/RGB_PWM_red.c ****             CY_SET_REG8(RGB_PWM_red_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_UsingFixedFunction) */
 592:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 593:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 595:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (RGB_PWM_red_DeadBandUsed)
 596:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 597:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 598:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_WriteDeadTime
 600:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 602:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 603:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 605:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 606:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 608:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 609:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 610:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 611:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/RGB_PWM_red.c ****     void RGB_PWM_red_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 614:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(!RGB_PWM_red_DeadBand2_4)
 616:Generated_Source\PSoC5/RGB_PWM_red.c ****             CY_SET_REG8(RGB_PWM_red_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 618:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/RGB_PWM_red.c ****             RGB_PWM_red_DEADBAND_COUNT &= ((uint8)(~RGB_PWM_red_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 622:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/RGB_PWM_red.c ****             #if(RGB_PWM_red_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/RGB_PWM_red.c ****                 RGB_PWM_red_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << RGB_PWM_red_DEADBAND_COUN
 625:Generated_Source\PSoC5/RGB_PWM_red.c ****                                                     RGB_PWM_red_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/RGB_PWM_red.c ****             #else
 627:Generated_Source\PSoC5/RGB_PWM_red.c ****                 RGB_PWM_red_DEADBAND_COUNT |= deadtime & RGB_PWM_red_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/RGB_PWM_red.c ****             #endif /* (RGB_PWM_red_DEADBAND_COUNT_SHIFT) */
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 17


 629:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 630:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (!RGB_PWM_red_DeadBand2_4) */
 631:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 632:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 633:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 634:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_ReadDeadTime
 636:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 638:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 639:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 641:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 642:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 643:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 644:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 645:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 647:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/RGB_PWM_red.c ****     uint8 RGB_PWM_red_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 650:Generated_Source\PSoC5/RGB_PWM_red.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(!RGB_PWM_red_DeadBand2_4)
 652:Generated_Source\PSoC5/RGB_PWM_red.c ****             return (CY_GET_REG8(RGB_PWM_red_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 654:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 655:Generated_Source\PSoC5/RGB_PWM_red.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/RGB_PWM_red.c ****             #if(RGB_PWM_red_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/RGB_PWM_red.c ****                 return ((uint8)(((uint8)(RGB_PWM_red_DEADBAND_COUNT & RGB_PWM_red_DEADBAND_COUNT_MA
 658:Generated_Source\PSoC5/RGB_PWM_red.c ****                                                                            RGB_PWM_red_DEADBAND_COU
 659:Generated_Source\PSoC5/RGB_PWM_red.c ****             #else
 660:Generated_Source\PSoC5/RGB_PWM_red.c ****                 return (RGB_PWM_red_DEADBAND_COUNT & RGB_PWM_red_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/RGB_PWM_red.c ****             #endif /* (RGB_PWM_red_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (!RGB_PWM_red_DeadBand2_4) */
 663:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 664:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 666:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (RGB_PWM_red_UseStatus || RGB_PWM_red_UsingFixedFunction)
 667:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 668:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 669:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_SetInterruptMode
 671:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 673:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 674:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  source status register.
 676:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 677:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 678:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 680:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 681:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 682:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 683:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/RGB_PWM_red.c ****     void RGB_PWM_red_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 18


 686:Generated_Source\PSoC5/RGB_PWM_red.c ****         CY_SET_REG8(RGB_PWM_red_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 688:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 689:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 690:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_ReadStatusRegister
 692:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 694:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 695:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 697:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 698:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 699:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 700:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 701:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 710:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/RGB_PWM_red.c ****     uint8 RGB_PWM_red_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 713:Generated_Source\PSoC5/RGB_PWM_red.c ****         return (CY_GET_REG8(RGB_PWM_red_STATUS_PTR));
 714:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 715:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 716:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* (RGB_PWM_red_UseStatus || RGB_PWM_red_UsingFixedFunction) */
 717:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 718:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 719:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (RGB_PWM_red_UseControl)
 720:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 721:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 722:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_ReadControlRegister
 724:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 726:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 727:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 730:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 731:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 732:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 733:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 734:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 736:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/RGB_PWM_red.c ****     uint8 RGB_PWM_red_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 273              		.loc 1 738 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 19


 277              		@ link register save eliminated.
 739:Generated_Source\PSoC5/RGB_PWM_red.c ****         uint8 result;
 740:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 741:Generated_Source\PSoC5/RGB_PWM_red.c ****         result = CY_GET_REG8(RGB_PWM_red_CONTROL_PTR);
 278              		.loc 1 741 0
 279 0000 014B     		ldr	r3, .L29
 280 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 281              	.LVL10:
 742:Generated_Source\PSoC5/RGB_PWM_red.c ****         return (result);
 743:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 282              		.loc 1 743 0
 283 0004 7047     		bx	lr
 284              	.L30:
 285 0006 00BF     		.align	2
 286              	.L29:
 287 0008 7E640040 		.word	1073767550
 288              		.cfi_endproc
 289              	.LFE8:
 290              		.size	RGB_PWM_red_ReadControlRegister, .-RGB_PWM_red_ReadControlRegister
 291              		.section	.text.RGB_PWM_red_WriteControlRegister,"ax",%progbits
 292              		.align	2
 293              		.global	RGB_PWM_red_WriteControlRegister
 294              		.thumb
 295              		.thumb_func
 296              		.type	RGB_PWM_red_WriteControlRegister, %function
 297              	RGB_PWM_red_WriteControlRegister:
 298              	.LFB9:
 744:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 745:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 746:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_WriteControlRegister
 748:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 750:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 751:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 754:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 755:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 761:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 762:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 763:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 764:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/RGB_PWM_red.c ****     void RGB_PWM_red_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 299              		.loc 1 766 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304              	.LVL11:
 767:Generated_Source\PSoC5/RGB_PWM_red.c ****         CY_SET_REG8(RGB_PWM_red_CONTROL_PTR, control);
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 20


 305              		.loc 1 767 0
 306 0000 014B     		ldr	r3, .L32
 307 0002 1870     		strb	r0, [r3]
 308 0004 7047     		bx	lr
 309              	.L33:
 310 0006 00BF     		.align	2
 311              	.L32:
 312 0008 7E640040 		.word	1073767550
 313              		.cfi_endproc
 314              	.LFE9:
 315              		.size	RGB_PWM_red_WriteControlRegister, .-RGB_PWM_red_WriteControlRegister
 316              		.section	.text.RGB_PWM_red_ReadCapture,"ax",%progbits
 317              		.align	2
 318              		.global	RGB_PWM_red_ReadCapture
 319              		.thumb
 320              		.thumb_func
 321              		.type	RGB_PWM_red_ReadCapture, %function
 322              	RGB_PWM_red_ReadCapture:
 323              	.LFB10:
 768:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 769:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 770:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* (RGB_PWM_red_UseControl) */
 771:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 772:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 773:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (!RGB_PWM_red_UsingFixedFunction)
 774:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 775:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 776:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_ReadCapture
 778:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 780:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 781:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 783:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 784:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 785:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 786:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 787:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 789:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/RGB_PWM_red.c ****     uint8 RGB_PWM_red_ReadCapture(void) 
 791:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 324              		.loc 1 791 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 792:Generated_Source\PSoC5/RGB_PWM_red.c ****         return (CY_GET_REG8(RGB_PWM_red_CAPTURE_LSB_PTR));
 329              		.loc 1 792 0
 330 0000 014B     		ldr	r3, .L35
 331 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 332              		.loc 1 793 0
 333 0004 7047     		bx	lr
 334              	.L36:
 335 0006 00BF     		.align	2
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 21


 336              	.L35:
 337 0008 5F640040 		.word	1073767519
 338              		.cfi_endproc
 339              	.LFE10:
 340              		.size	RGB_PWM_red_ReadCapture, .-RGB_PWM_red_ReadCapture
 341              		.section	.text.RGB_PWM_red_ReadCompare,"ax",%progbits
 342              		.align	2
 343              		.global	RGB_PWM_red_ReadCompare
 344              		.thumb
 345              		.thumb_func
 346              		.type	RGB_PWM_red_ReadCompare, %function
 347              	RGB_PWM_red_ReadCompare:
 348              	.LFB11:
 794:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 795:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* (!RGB_PWM_red_UsingFixedFunction) */
 796:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 797:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 798:Generated_Source\PSoC5/RGB_PWM_red.c **** #if (RGB_PWM_red_UseOneCompareMode)
 799:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 800:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 801:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_ReadCompare
 803:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 805:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 806:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 809:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 810:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 811:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 812:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 813:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 815:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/RGB_PWM_red.c ****     uint8 RGB_PWM_red_ReadCompare(void) 
 817:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 349              		.loc 1 817 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 818:Generated_Source\PSoC5/RGB_PWM_red.c ****         #if(RGB_PWM_red_UsingFixedFunction)
 819:Generated_Source\PSoC5/RGB_PWM_red.c ****             return ((uint8)CY_GET_REG16(RGB_PWM_red_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/RGB_PWM_red.c ****         #else
 821:Generated_Source\PSoC5/RGB_PWM_red.c ****             return (CY_GET_REG8(RGB_PWM_red_COMPARE1_LSB_PTR));
 354              		.loc 1 821 0
 355 0000 014B     		ldr	r3, .L38
 356 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 822:Generated_Source\PSoC5/RGB_PWM_red.c ****         #endif /* (RGB_PWM_red_UsingFixedFunction) */
 823:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 357              		.loc 1 823 0
 358 0004 7047     		bx	lr
 359              	.L39:
 360 0006 00BF     		.align	2
 361              	.L38:
 362 0008 2F640040 		.word	1073767471
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 22


 363              		.cfi_endproc
 364              	.LFE11:
 365              		.size	RGB_PWM_red_ReadCompare, .-RGB_PWM_red_ReadCompare
 366              		.section	.text.RGB_PWM_red_ReadPeriod,"ax",%progbits
 367              		.align	2
 368              		.global	RGB_PWM_red_ReadPeriod
 369              		.thumb
 370              		.thumb_func
 371              		.type	RGB_PWM_red_ReadPeriod, %function
 372              	RGB_PWM_red_ReadPeriod:
 373              	.LFB12:
 824:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 825:Generated_Source\PSoC5/RGB_PWM_red.c **** #else
 826:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 827:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 828:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_ReadCompare1
 830:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 832:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 833:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 835:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 836:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 837:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 838:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 839:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 841:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/RGB_PWM_red.c ****     uint8 RGB_PWM_red_ReadCompare1(void) 
 843:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 844:Generated_Source\PSoC5/RGB_PWM_red.c ****         return (CY_GET_REG8(RGB_PWM_red_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 846:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 847:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 848:Generated_Source\PSoC5/RGB_PWM_red.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Function Name: RGB_PWM_red_ReadCompare2
 850:Generated_Source\PSoC5/RGB_PWM_red.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 852:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Summary:
 853:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 855:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Parameters:
 856:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  None
 857:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 858:Generated_Source\PSoC5/RGB_PWM_red.c ****     * Return:
 859:Generated_Source\PSoC5/RGB_PWM_red.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/RGB_PWM_red.c ****     *
 861:Generated_Source\PSoC5/RGB_PWM_red.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/RGB_PWM_red.c ****     uint8 RGB_PWM_red_ReadCompare2(void) 
 863:Generated_Source\PSoC5/RGB_PWM_red.c ****     {
 864:Generated_Source\PSoC5/RGB_PWM_red.c ****         return (CY_GET_REG8(RGB_PWM_red_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/RGB_PWM_red.c ****     }
 866:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 867:Generated_Source\PSoC5/RGB_PWM_red.c **** #endif /* (RGB_PWM_red_UseOneCompareMode) */
 868:Generated_Source\PSoC5/RGB_PWM_red.c **** 
 869:Generated_Source\PSoC5/RGB_PWM_red.c **** 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 23


 870:Generated_Source\PSoC5/RGB_PWM_red.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/RGB_PWM_red.c **** * Function Name: RGB_PWM_red_ReadPeriod
 872:Generated_Source\PSoC5/RGB_PWM_red.c **** ********************************************************************************
 873:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 874:Generated_Source\PSoC5/RGB_PWM_red.c **** * Summary:
 875:Generated_Source\PSoC5/RGB_PWM_red.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 877:Generated_Source\PSoC5/RGB_PWM_red.c **** * Parameters:
 878:Generated_Source\PSoC5/RGB_PWM_red.c **** *  None
 879:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 880:Generated_Source\PSoC5/RGB_PWM_red.c **** * Return:
 881:Generated_Source\PSoC5/RGB_PWM_red.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/RGB_PWM_red.c **** *
 883:Generated_Source\PSoC5/RGB_PWM_red.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/RGB_PWM_red.c **** uint8 RGB_PWM_red_ReadPeriod(void) 
 885:Generated_Source\PSoC5/RGB_PWM_red.c **** {
 374              		.loc 1 885 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 886:Generated_Source\PSoC5/RGB_PWM_red.c ****     #if(RGB_PWM_red_UsingFixedFunction)
 887:Generated_Source\PSoC5/RGB_PWM_red.c ****         return ((uint8)CY_GET_REG16(RGB_PWM_red_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/RGB_PWM_red.c ****     #else
 889:Generated_Source\PSoC5/RGB_PWM_red.c ****         return (CY_GET_REG8(RGB_PWM_red_PERIOD_LSB_PTR));
 379              		.loc 1 889 0
 380 0000 014B     		ldr	r3, .L41
 381 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/RGB_PWM_red.c ****     #endif /* (RGB_PWM_red_UsingFixedFunction) */
 891:Generated_Source\PSoC5/RGB_PWM_red.c **** }
 382              		.loc 1 891 0
 383 0004 7047     		bx	lr
 384              	.L42:
 385 0006 00BF     		.align	2
 386              	.L41:
 387 0008 4F640040 		.word	1073767503
 388              		.cfi_endproc
 389              	.LFE12:
 390              		.size	RGB_PWM_red_ReadPeriod, .-RGB_PWM_red_ReadPeriod
 391              		.global	RGB_PWM_red_initVar
 392              		.bss
 393              		.set	.LANCHOR0,. + 0
 394              		.type	RGB_PWM_red_initVar, %object
 395              		.size	RGB_PWM_red_initVar, 1
 396              	RGB_PWM_red_initVar:
 397 0000 00       		.space	1
 398              		.text
 399              	.Letext0:
 400              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 401              		.section	.debug_info,"",%progbits
 402              	.Ldebug_info0:
 403 0000 74020000 		.4byte	0x274
 404 0004 0400     		.2byte	0x4
 405 0006 00000000 		.4byte	.Ldebug_abbrev0
 406 000a 04       		.byte	0x4
 407 000b 01       		.uleb128 0x1
 408 000c 99000000 		.4byte	.LASF34
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 24


 409 0010 0C       		.byte	0xc
 410 0011 00020000 		.4byte	.LASF35
 411 0015 D9020000 		.4byte	.LASF36
 412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 413 001d 00000000 		.4byte	0
 414 0021 00000000 		.4byte	.Ldebug_line0
 415 0025 02       		.uleb128 0x2
 416 0026 01       		.byte	0x1
 417 0027 06       		.byte	0x6
 418 0028 C5020000 		.4byte	.LASF0
 419 002c 02       		.uleb128 0x2
 420 002d 01       		.byte	0x1
 421 002e 08       		.byte	0x8
 422 002f 8B000000 		.4byte	.LASF1
 423 0033 02       		.uleb128 0x2
 424 0034 02       		.byte	0x2
 425 0035 05       		.byte	0x5
 426 0036 8F020000 		.4byte	.LASF2
 427 003a 02       		.uleb128 0x2
 428 003b 02       		.byte	0x2
 429 003c 07       		.byte	0x7
 430 003d 38000000 		.4byte	.LASF3
 431 0041 02       		.uleb128 0x2
 432 0042 04       		.byte	0x4
 433 0043 05       		.byte	0x5
 434 0044 B0020000 		.4byte	.LASF4
 435 0048 02       		.uleb128 0x2
 436 0049 04       		.byte	0x4
 437 004a 07       		.byte	0x7
 438 004b 2C010000 		.4byte	.LASF5
 439 004f 02       		.uleb128 0x2
 440 0050 08       		.byte	0x8
 441 0051 05       		.byte	0x5
 442 0052 51020000 		.4byte	.LASF6
 443 0056 02       		.uleb128 0x2
 444 0057 08       		.byte	0x8
 445 0058 07       		.byte	0x7
 446 0059 25020000 		.4byte	.LASF7
 447 005d 03       		.uleb128 0x3
 448 005e 04       		.byte	0x4
 449 005f 05       		.byte	0x5
 450 0060 696E7400 		.ascii	"int\000"
 451 0064 02       		.uleb128 0x2
 452 0065 04       		.byte	0x4
 453 0066 07       		.byte	0x7
 454 0067 DB010000 		.4byte	.LASF8
 455 006b 04       		.uleb128 0x4
 456 006c 52010000 		.4byte	.LASF12
 457 0070 02       		.byte	0x2
 458 0071 E401     		.2byte	0x1e4
 459 0073 2C000000 		.4byte	0x2c
 460 0077 02       		.uleb128 0x2
 461 0078 04       		.byte	0x4
 462 0079 04       		.byte	0x4
 463 007a 7D000000 		.4byte	.LASF9
 464 007e 02       		.uleb128 0x2
 465 007f 08       		.byte	0x8
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 25


 466 0080 04       		.byte	0x4
 467 0081 AB010000 		.4byte	.LASF10
 468 0085 02       		.uleb128 0x2
 469 0086 01       		.byte	0x1
 470 0087 08       		.byte	0x8
 471 0088 71020000 		.4byte	.LASF11
 472 008c 04       		.uleb128 0x4
 473 008d 27010000 		.4byte	.LASF13
 474 0091 02       		.byte	0x2
 475 0092 8E02     		.2byte	0x28e
 476 0094 98000000 		.4byte	0x98
 477 0098 05       		.uleb128 0x5
 478 0099 6B000000 		.4byte	0x6b
 479 009d 02       		.uleb128 0x2
 480 009e 08       		.byte	0x8
 481 009f 04       		.byte	0x4
 482 00a0 B9020000 		.4byte	.LASF14
 483 00a4 02       		.uleb128 0x2
 484 00a5 04       		.byte	0x4
 485 00a6 07       		.byte	0x7
 486 00a7 48020000 		.4byte	.LASF15
 487 00ab 06       		.uleb128 0x6
 488 00ac 98010000 		.4byte	.LASF16
 489 00b0 01       		.byte	0x1
 490 00b1 C7       		.byte	0xc7
 491 00b2 00000000 		.4byte	.LFB2
 492 00b6 10000000 		.4byte	.LFE2-.LFB2
 493 00ba 01       		.uleb128 0x1
 494 00bb 9C       		.byte	0x9c
 495 00bc 06       		.uleb128 0x6
 496 00bd B2010000 		.4byte	.LASF17
 497 00c1 01       		.byte	0x1
 498 00c2 E9       		.byte	0xe9
 499 00c3 00000000 		.4byte	.LFB3
 500 00c7 10000000 		.4byte	.LFE3-.LFB3
 501 00cb 01       		.uleb128 0x1
 502 00cc 9C       		.byte	0x9c
 503 00cd 07       		.uleb128 0x7
 504 00ce 1F000000 		.4byte	.LASF18
 505 00d2 01       		.byte	0x1
 506 00d3 9301     		.2byte	0x193
 507 00d5 00000000 		.4byte	.LFB4
 508 00d9 0C000000 		.4byte	.LFE4-.LFB4
 509 00dd 01       		.uleb128 0x1
 510 00de 9C       		.byte	0x9c
 511 00df F2000000 		.4byte	0xf2
 512 00e3 08       		.uleb128 0x8
 513 00e4 83000000 		.4byte	.LASF20
 514 00e8 01       		.byte	0x1
 515 00e9 9301     		.2byte	0x193
 516 00eb 6B000000 		.4byte	0x6b
 517 00ef 01       		.uleb128 0x1
 518 00f0 50       		.byte	0x50
 519 00f1 00       		.byte	0
 520 00f2 09       		.uleb128 0x9
 521 00f3 80010000 		.4byte	.LASF30
 522 00f7 01       		.byte	0x1
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 26


 523 00f8 A901     		.2byte	0x1a9
 524 00fa 6B000000 		.4byte	0x6b
 525 00fe 00000000 		.4byte	.LFB5
 526 0102 14000000 		.4byte	.LFE5-.LFB5
 527 0106 01       		.uleb128 0x1
 528 0107 9C       		.byte	0x9c
 529 0108 07       		.uleb128 0x7
 530 0109 00000000 		.4byte	.LASF19
 531 010d 01       		.byte	0x1
 532 010e E201     		.2byte	0x1e2
 533 0110 00000000 		.4byte	.LFB6
 534 0114 0C000000 		.4byte	.LFE6-.LFB6
 535 0118 01       		.uleb128 0x1
 536 0119 9C       		.byte	0x9c
 537 011a 2D010000 		.4byte	0x12d
 538 011e 08       		.uleb128 0x8
 539 011f 18000000 		.4byte	.LASF21
 540 0123 01       		.byte	0x1
 541 0124 E201     		.2byte	0x1e2
 542 0126 6B000000 		.4byte	0x6b
 543 012a 01       		.uleb128 0x1
 544 012b 50       		.byte	0x50
 545 012c 00       		.byte	0
 546 012d 07       		.uleb128 0x7
 547 012e 76020000 		.4byte	.LASF22
 548 0132 01       		.byte	0x1
 549 0133 0402     		.2byte	0x204
 550 0135 00000000 		.4byte	.LFB7
 551 0139 0C000000 		.4byte	.LFE7-.LFB7
 552 013d 01       		.uleb128 0x1
 553 013e 9C       		.byte	0x9c
 554 013f 52010000 		.4byte	0x152
 555 0143 08       		.uleb128 0x8
 556 0144 D1020000 		.4byte	.LASF23
 557 0148 01       		.byte	0x1
 558 0149 0402     		.2byte	0x204
 559 014b 6B000000 		.4byte	0x6b
 560 014f 01       		.uleb128 0x1
 561 0150 50       		.byte	0x50
 562 0151 00       		.byte	0
 563 0152 0A       		.uleb128 0xa
 564 0153 4B000000 		.4byte	.LASF24
 565 0157 01       		.byte	0x1
 566 0158 54       		.byte	0x54
 567 0159 00000000 		.4byte	.LFB1
 568 015d 34000000 		.4byte	.LFE1-.LFB1
 569 0161 01       		.uleb128 0x1
 570 0162 9C       		.byte	0x9c
 571 0163 AE010000 		.4byte	0x1ae
 572 0167 0B       		.uleb128 0xb
 573 0168 43020000 		.4byte	.LASF26
 574 016c 01       		.byte	0x1
 575 016d 57       		.byte	0x57
 576 016e 6B000000 		.4byte	0x6b
 577 0172 00000000 		.4byte	.LLST0
 578 0176 0C       		.uleb128 0xc
 579 0177 20000000 		.4byte	.LVL5
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 27


 580 017b CD000000 		.4byte	0xcd
 581 017f 8A010000 		.4byte	0x18a
 582 0183 0D       		.uleb128 0xd
 583 0184 01       		.uleb128 0x1
 584 0185 50       		.byte	0x50
 585 0186 02       		.uleb128 0x2
 586 0187 09       		.byte	0x9
 587 0188 FF       		.byte	0xff
 588 0189 00       		.byte	0
 589 018a 0C       		.uleb128 0xc
 590 018b 26000000 		.4byte	.LVL6
 591 018f 08010000 		.4byte	0x108
 592 0193 9E010000 		.4byte	0x19e
 593 0197 0D       		.uleb128 0xd
 594 0198 01       		.uleb128 0x1
 595 0199 50       		.byte	0x50
 596 019a 02       		.uleb128 0x2
 597 019b 09       		.byte	0x9
 598 019c FF       		.byte	0xff
 599 019d 00       		.byte	0
 600 019e 0E       		.uleb128 0xe
 601 019f 2C000000 		.4byte	.LVL7
 602 01a3 2D010000 		.4byte	0x12d
 603 01a7 0D       		.uleb128 0xd
 604 01a8 01       		.uleb128 0x1
 605 01a9 50       		.byte	0x50
 606 01aa 01       		.uleb128 0x1
 607 01ab 30       		.byte	0x30
 608 01ac 00       		.byte	0
 609 01ad 00       		.byte	0
 610 01ae 0A       		.uleb128 0xa
 611 01af 5F020000 		.4byte	.LASF25
 612 01b3 01       		.byte	0x1
 613 01b4 37       		.byte	0x37
 614 01b5 00000000 		.4byte	.LFB0
 615 01b9 1C000000 		.4byte	.LFE0-.LFB0
 616 01bd 01       		.uleb128 0x1
 617 01be 9C       		.byte	0x9c
 618 01bf D6010000 		.4byte	0x1d6
 619 01c3 0F       		.uleb128 0xf
 620 01c4 0C000000 		.4byte	.LVL8
 621 01c8 52010000 		.4byte	0x152
 622 01cc 0F       		.uleb128 0xf
 623 01cd 16000000 		.4byte	.LVL9
 624 01d1 AB000000 		.4byte	0xab
 625 01d5 00       		.byte	0
 626 01d6 10       		.uleb128 0x10
 627 01d7 60010000 		.4byte	.LASF37
 628 01db 01       		.byte	0x1
 629 01dc E102     		.2byte	0x2e1
 630 01de 6B000000 		.4byte	0x6b
 631 01e2 00000000 		.4byte	.LFB8
 632 01e6 0C000000 		.4byte	.LFE8-.LFB8
 633 01ea 01       		.uleb128 0x1
 634 01eb 9C       		.byte	0x9c
 635 01ec FF010000 		.4byte	0x1ff
 636 01f0 11       		.uleb128 0x11
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 28


 637 01f1 3C020000 		.4byte	.LASF27
 638 01f5 01       		.byte	0x1
 639 01f6 E302     		.2byte	0x2e3
 640 01f8 6B000000 		.4byte	0x6b
 641 01fc 01       		.uleb128 0x1
 642 01fd 50       		.byte	0x50
 643 01fe 00       		.byte	0
 644 01ff 07       		.uleb128 0x7
 645 0200 5C000000 		.4byte	.LASF28
 646 0204 01       		.byte	0x1
 647 0205 FD02     		.2byte	0x2fd
 648 0207 00000000 		.4byte	.LFB9
 649 020b 0C000000 		.4byte	.LFE9-.LFB9
 650 020f 01       		.uleb128 0x1
 651 0210 9C       		.byte	0x9c
 652 0211 24020000 		.4byte	0x224
 653 0215 08       		.uleb128 0x8
 654 0216 58010000 		.4byte	.LASF29
 655 021a 01       		.byte	0x1
 656 021b FD02     		.2byte	0x2fd
 657 021d 6B000000 		.4byte	0x6b
 658 0221 01       		.uleb128 0x1
 659 0222 50       		.byte	0x50
 660 0223 00       		.byte	0
 661 0224 09       		.uleb128 0x9
 662 0225 E8010000 		.4byte	.LASF31
 663 0229 01       		.byte	0x1
 664 022a 1603     		.2byte	0x316
 665 022c 6B000000 		.4byte	0x6b
 666 0230 00000000 		.4byte	.LFB10
 667 0234 0C000000 		.4byte	.LFE10-.LFB10
 668 0238 01       		.uleb128 0x1
 669 0239 9C       		.byte	0x9c
 670 023a 09       		.uleb128 0x9
 671 023b C3010000 		.4byte	.LASF32
 672 023f 01       		.byte	0x1
 673 0240 3003     		.2byte	0x330
 674 0242 6B000000 		.4byte	0x6b
 675 0246 00000000 		.4byte	.LFB11
 676 024a 0C000000 		.4byte	.LFE11-.LFB11
 677 024e 01       		.uleb128 0x1
 678 024f 9C       		.byte	0x9c
 679 0250 09       		.uleb128 0x9
 680 0251 99020000 		.4byte	.LASF33
 681 0255 01       		.byte	0x1
 682 0256 7403     		.2byte	0x374
 683 0258 6B000000 		.4byte	0x6b
 684 025c 00000000 		.4byte	.LFB12
 685 0260 0C000000 		.4byte	.LFE12-.LFB12
 686 0264 01       		.uleb128 0x1
 687 0265 9C       		.byte	0x9c
 688 0266 12       		.uleb128 0x12
 689 0267 3E010000 		.4byte	.LASF38
 690 026b 01       		.byte	0x1
 691 026c 20       		.byte	0x20
 692 026d 6B000000 		.4byte	0x6b
 693 0271 05       		.uleb128 0x5
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 29


 694 0272 03       		.byte	0x3
 695 0273 00000000 		.4byte	RGB_PWM_red_initVar
 696 0277 00       		.byte	0
 697              		.section	.debug_abbrev,"",%progbits
 698              	.Ldebug_abbrev0:
 699 0000 01       		.uleb128 0x1
 700 0001 11       		.uleb128 0x11
 701 0002 01       		.byte	0x1
 702 0003 25       		.uleb128 0x25
 703 0004 0E       		.uleb128 0xe
 704 0005 13       		.uleb128 0x13
 705 0006 0B       		.uleb128 0xb
 706 0007 03       		.uleb128 0x3
 707 0008 0E       		.uleb128 0xe
 708 0009 1B       		.uleb128 0x1b
 709 000a 0E       		.uleb128 0xe
 710 000b 55       		.uleb128 0x55
 711 000c 17       		.uleb128 0x17
 712 000d 11       		.uleb128 0x11
 713 000e 01       		.uleb128 0x1
 714 000f 10       		.uleb128 0x10
 715 0010 17       		.uleb128 0x17
 716 0011 00       		.byte	0
 717 0012 00       		.byte	0
 718 0013 02       		.uleb128 0x2
 719 0014 24       		.uleb128 0x24
 720 0015 00       		.byte	0
 721 0016 0B       		.uleb128 0xb
 722 0017 0B       		.uleb128 0xb
 723 0018 3E       		.uleb128 0x3e
 724 0019 0B       		.uleb128 0xb
 725 001a 03       		.uleb128 0x3
 726 001b 0E       		.uleb128 0xe
 727 001c 00       		.byte	0
 728 001d 00       		.byte	0
 729 001e 03       		.uleb128 0x3
 730 001f 24       		.uleb128 0x24
 731 0020 00       		.byte	0
 732 0021 0B       		.uleb128 0xb
 733 0022 0B       		.uleb128 0xb
 734 0023 3E       		.uleb128 0x3e
 735 0024 0B       		.uleb128 0xb
 736 0025 03       		.uleb128 0x3
 737 0026 08       		.uleb128 0x8
 738 0027 00       		.byte	0
 739 0028 00       		.byte	0
 740 0029 04       		.uleb128 0x4
 741 002a 16       		.uleb128 0x16
 742 002b 00       		.byte	0
 743 002c 03       		.uleb128 0x3
 744 002d 0E       		.uleb128 0xe
 745 002e 3A       		.uleb128 0x3a
 746 002f 0B       		.uleb128 0xb
 747 0030 3B       		.uleb128 0x3b
 748 0031 05       		.uleb128 0x5
 749 0032 49       		.uleb128 0x49
 750 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 30


 751 0034 00       		.byte	0
 752 0035 00       		.byte	0
 753 0036 05       		.uleb128 0x5
 754 0037 35       		.uleb128 0x35
 755 0038 00       		.byte	0
 756 0039 49       		.uleb128 0x49
 757 003a 13       		.uleb128 0x13
 758 003b 00       		.byte	0
 759 003c 00       		.byte	0
 760 003d 06       		.uleb128 0x6
 761 003e 2E       		.uleb128 0x2e
 762 003f 00       		.byte	0
 763 0040 3F       		.uleb128 0x3f
 764 0041 19       		.uleb128 0x19
 765 0042 03       		.uleb128 0x3
 766 0043 0E       		.uleb128 0xe
 767 0044 3A       		.uleb128 0x3a
 768 0045 0B       		.uleb128 0xb
 769 0046 3B       		.uleb128 0x3b
 770 0047 0B       		.uleb128 0xb
 771 0048 27       		.uleb128 0x27
 772 0049 19       		.uleb128 0x19
 773 004a 11       		.uleb128 0x11
 774 004b 01       		.uleb128 0x1
 775 004c 12       		.uleb128 0x12
 776 004d 06       		.uleb128 0x6
 777 004e 40       		.uleb128 0x40
 778 004f 18       		.uleb128 0x18
 779 0050 9742     		.uleb128 0x2117
 780 0052 19       		.uleb128 0x19
 781 0053 00       		.byte	0
 782 0054 00       		.byte	0
 783 0055 07       		.uleb128 0x7
 784 0056 2E       		.uleb128 0x2e
 785 0057 01       		.byte	0x1
 786 0058 3F       		.uleb128 0x3f
 787 0059 19       		.uleb128 0x19
 788 005a 03       		.uleb128 0x3
 789 005b 0E       		.uleb128 0xe
 790 005c 3A       		.uleb128 0x3a
 791 005d 0B       		.uleb128 0xb
 792 005e 3B       		.uleb128 0x3b
 793 005f 05       		.uleb128 0x5
 794 0060 27       		.uleb128 0x27
 795 0061 19       		.uleb128 0x19
 796 0062 11       		.uleb128 0x11
 797 0063 01       		.uleb128 0x1
 798 0064 12       		.uleb128 0x12
 799 0065 06       		.uleb128 0x6
 800 0066 40       		.uleb128 0x40
 801 0067 18       		.uleb128 0x18
 802 0068 9742     		.uleb128 0x2117
 803 006a 19       		.uleb128 0x19
 804 006b 01       		.uleb128 0x1
 805 006c 13       		.uleb128 0x13
 806 006d 00       		.byte	0
 807 006e 00       		.byte	0
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 31


 808 006f 08       		.uleb128 0x8
 809 0070 05       		.uleb128 0x5
 810 0071 00       		.byte	0
 811 0072 03       		.uleb128 0x3
 812 0073 0E       		.uleb128 0xe
 813 0074 3A       		.uleb128 0x3a
 814 0075 0B       		.uleb128 0xb
 815 0076 3B       		.uleb128 0x3b
 816 0077 05       		.uleb128 0x5
 817 0078 49       		.uleb128 0x49
 818 0079 13       		.uleb128 0x13
 819 007a 02       		.uleb128 0x2
 820 007b 18       		.uleb128 0x18
 821 007c 00       		.byte	0
 822 007d 00       		.byte	0
 823 007e 09       		.uleb128 0x9
 824 007f 2E       		.uleb128 0x2e
 825 0080 00       		.byte	0
 826 0081 3F       		.uleb128 0x3f
 827 0082 19       		.uleb128 0x19
 828 0083 03       		.uleb128 0x3
 829 0084 0E       		.uleb128 0xe
 830 0085 3A       		.uleb128 0x3a
 831 0086 0B       		.uleb128 0xb
 832 0087 3B       		.uleb128 0x3b
 833 0088 05       		.uleb128 0x5
 834 0089 27       		.uleb128 0x27
 835 008a 19       		.uleb128 0x19
 836 008b 49       		.uleb128 0x49
 837 008c 13       		.uleb128 0x13
 838 008d 11       		.uleb128 0x11
 839 008e 01       		.uleb128 0x1
 840 008f 12       		.uleb128 0x12
 841 0090 06       		.uleb128 0x6
 842 0091 40       		.uleb128 0x40
 843 0092 18       		.uleb128 0x18
 844 0093 9742     		.uleb128 0x2117
 845 0095 19       		.uleb128 0x19
 846 0096 00       		.byte	0
 847 0097 00       		.byte	0
 848 0098 0A       		.uleb128 0xa
 849 0099 2E       		.uleb128 0x2e
 850 009a 01       		.byte	0x1
 851 009b 3F       		.uleb128 0x3f
 852 009c 19       		.uleb128 0x19
 853 009d 03       		.uleb128 0x3
 854 009e 0E       		.uleb128 0xe
 855 009f 3A       		.uleb128 0x3a
 856 00a0 0B       		.uleb128 0xb
 857 00a1 3B       		.uleb128 0x3b
 858 00a2 0B       		.uleb128 0xb
 859 00a3 27       		.uleb128 0x27
 860 00a4 19       		.uleb128 0x19
 861 00a5 11       		.uleb128 0x11
 862 00a6 01       		.uleb128 0x1
 863 00a7 12       		.uleb128 0x12
 864 00a8 06       		.uleb128 0x6
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 32


 865 00a9 40       		.uleb128 0x40
 866 00aa 18       		.uleb128 0x18
 867 00ab 9742     		.uleb128 0x2117
 868 00ad 19       		.uleb128 0x19
 869 00ae 01       		.uleb128 0x1
 870 00af 13       		.uleb128 0x13
 871 00b0 00       		.byte	0
 872 00b1 00       		.byte	0
 873 00b2 0B       		.uleb128 0xb
 874 00b3 34       		.uleb128 0x34
 875 00b4 00       		.byte	0
 876 00b5 03       		.uleb128 0x3
 877 00b6 0E       		.uleb128 0xe
 878 00b7 3A       		.uleb128 0x3a
 879 00b8 0B       		.uleb128 0xb
 880 00b9 3B       		.uleb128 0x3b
 881 00ba 0B       		.uleb128 0xb
 882 00bb 49       		.uleb128 0x49
 883 00bc 13       		.uleb128 0x13
 884 00bd 02       		.uleb128 0x2
 885 00be 17       		.uleb128 0x17
 886 00bf 00       		.byte	0
 887 00c0 00       		.byte	0
 888 00c1 0C       		.uleb128 0xc
 889 00c2 898201   		.uleb128 0x4109
 890 00c5 01       		.byte	0x1
 891 00c6 11       		.uleb128 0x11
 892 00c7 01       		.uleb128 0x1
 893 00c8 31       		.uleb128 0x31
 894 00c9 13       		.uleb128 0x13
 895 00ca 01       		.uleb128 0x1
 896 00cb 13       		.uleb128 0x13
 897 00cc 00       		.byte	0
 898 00cd 00       		.byte	0
 899 00ce 0D       		.uleb128 0xd
 900 00cf 8A8201   		.uleb128 0x410a
 901 00d2 00       		.byte	0
 902 00d3 02       		.uleb128 0x2
 903 00d4 18       		.uleb128 0x18
 904 00d5 9142     		.uleb128 0x2111
 905 00d7 18       		.uleb128 0x18
 906 00d8 00       		.byte	0
 907 00d9 00       		.byte	0
 908 00da 0E       		.uleb128 0xe
 909 00db 898201   		.uleb128 0x4109
 910 00de 01       		.byte	0x1
 911 00df 11       		.uleb128 0x11
 912 00e0 01       		.uleb128 0x1
 913 00e1 31       		.uleb128 0x31
 914 00e2 13       		.uleb128 0x13
 915 00e3 00       		.byte	0
 916 00e4 00       		.byte	0
 917 00e5 0F       		.uleb128 0xf
 918 00e6 898201   		.uleb128 0x4109
 919 00e9 00       		.byte	0
 920 00ea 11       		.uleb128 0x11
 921 00eb 01       		.uleb128 0x1
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 33


 922 00ec 31       		.uleb128 0x31
 923 00ed 13       		.uleb128 0x13
 924 00ee 00       		.byte	0
 925 00ef 00       		.byte	0
 926 00f0 10       		.uleb128 0x10
 927 00f1 2E       		.uleb128 0x2e
 928 00f2 01       		.byte	0x1
 929 00f3 3F       		.uleb128 0x3f
 930 00f4 19       		.uleb128 0x19
 931 00f5 03       		.uleb128 0x3
 932 00f6 0E       		.uleb128 0xe
 933 00f7 3A       		.uleb128 0x3a
 934 00f8 0B       		.uleb128 0xb
 935 00f9 3B       		.uleb128 0x3b
 936 00fa 05       		.uleb128 0x5
 937 00fb 27       		.uleb128 0x27
 938 00fc 19       		.uleb128 0x19
 939 00fd 49       		.uleb128 0x49
 940 00fe 13       		.uleb128 0x13
 941 00ff 11       		.uleb128 0x11
 942 0100 01       		.uleb128 0x1
 943 0101 12       		.uleb128 0x12
 944 0102 06       		.uleb128 0x6
 945 0103 40       		.uleb128 0x40
 946 0104 18       		.uleb128 0x18
 947 0105 9742     		.uleb128 0x2117
 948 0107 19       		.uleb128 0x19
 949 0108 01       		.uleb128 0x1
 950 0109 13       		.uleb128 0x13
 951 010a 00       		.byte	0
 952 010b 00       		.byte	0
 953 010c 11       		.uleb128 0x11
 954 010d 34       		.uleb128 0x34
 955 010e 00       		.byte	0
 956 010f 03       		.uleb128 0x3
 957 0110 0E       		.uleb128 0xe
 958 0111 3A       		.uleb128 0x3a
 959 0112 0B       		.uleb128 0xb
 960 0113 3B       		.uleb128 0x3b
 961 0114 05       		.uleb128 0x5
 962 0115 49       		.uleb128 0x49
 963 0116 13       		.uleb128 0x13
 964 0117 02       		.uleb128 0x2
 965 0118 18       		.uleb128 0x18
 966 0119 00       		.byte	0
 967 011a 00       		.byte	0
 968 011b 12       		.uleb128 0x12
 969 011c 34       		.uleb128 0x34
 970 011d 00       		.byte	0
 971 011e 03       		.uleb128 0x3
 972 011f 0E       		.uleb128 0xe
 973 0120 3A       		.uleb128 0x3a
 974 0121 0B       		.uleb128 0xb
 975 0122 3B       		.uleb128 0x3b
 976 0123 0B       		.uleb128 0xb
 977 0124 49       		.uleb128 0x49
 978 0125 13       		.uleb128 0x13
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 34


 979 0126 3F       		.uleb128 0x3f
 980 0127 19       		.uleb128 0x19
 981 0128 02       		.uleb128 0x2
 982 0129 18       		.uleb128 0x18
 983 012a 00       		.byte	0
 984 012b 00       		.byte	0
 985 012c 00       		.byte	0
 986              		.section	.debug_loc,"",%progbits
 987              	.Ldebug_loc0:
 988              	.LLST0:
 989 0000 0A000000 		.4byte	.LVL3
 990 0004 0E000000 		.4byte	.LVL4
 991 0008 0100     		.2byte	0x1
 992 000a 53       		.byte	0x53
 993 000b 00000000 		.4byte	0
 994 000f 00000000 		.4byte	0
 995              		.section	.debug_aranges,"",%progbits
 996 0000 7C000000 		.4byte	0x7c
 997 0004 0200     		.2byte	0x2
 998 0006 00000000 		.4byte	.Ldebug_info0
 999 000a 04       		.byte	0x4
 1000 000b 00       		.byte	0
 1001 000c 0000     		.2byte	0
 1002 000e 0000     		.2byte	0
 1003 0010 00000000 		.4byte	.LFB2
 1004 0014 10000000 		.4byte	.LFE2-.LFB2
 1005 0018 00000000 		.4byte	.LFB3
 1006 001c 10000000 		.4byte	.LFE3-.LFB3
 1007 0020 00000000 		.4byte	.LFB4
 1008 0024 0C000000 		.4byte	.LFE4-.LFB4
 1009 0028 00000000 		.4byte	.LFB5
 1010 002c 14000000 		.4byte	.LFE5-.LFB5
 1011 0030 00000000 		.4byte	.LFB6
 1012 0034 0C000000 		.4byte	.LFE6-.LFB6
 1013 0038 00000000 		.4byte	.LFB7
 1014 003c 0C000000 		.4byte	.LFE7-.LFB7
 1015 0040 00000000 		.4byte	.LFB1
 1016 0044 34000000 		.4byte	.LFE1-.LFB1
 1017 0048 00000000 		.4byte	.LFB0
 1018 004c 1C000000 		.4byte	.LFE0-.LFB0
 1019 0050 00000000 		.4byte	.LFB8
 1020 0054 0C000000 		.4byte	.LFE8-.LFB8
 1021 0058 00000000 		.4byte	.LFB9
 1022 005c 0C000000 		.4byte	.LFE9-.LFB9
 1023 0060 00000000 		.4byte	.LFB10
 1024 0064 0C000000 		.4byte	.LFE10-.LFB10
 1025 0068 00000000 		.4byte	.LFB11
 1026 006c 0C000000 		.4byte	.LFE11-.LFB11
 1027 0070 00000000 		.4byte	.LFB12
 1028 0074 0C000000 		.4byte	.LFE12-.LFB12
 1029 0078 00000000 		.4byte	0
 1030 007c 00000000 		.4byte	0
 1031              		.section	.debug_ranges,"",%progbits
 1032              	.Ldebug_ranges0:
 1033 0000 00000000 		.4byte	.LFB2
 1034 0004 10000000 		.4byte	.LFE2
 1035 0008 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 35


 1036 000c 10000000 		.4byte	.LFE3
 1037 0010 00000000 		.4byte	.LFB4
 1038 0014 0C000000 		.4byte	.LFE4
 1039 0018 00000000 		.4byte	.LFB5
 1040 001c 14000000 		.4byte	.LFE5
 1041 0020 00000000 		.4byte	.LFB6
 1042 0024 0C000000 		.4byte	.LFE6
 1043 0028 00000000 		.4byte	.LFB7
 1044 002c 0C000000 		.4byte	.LFE7
 1045 0030 00000000 		.4byte	.LFB1
 1046 0034 34000000 		.4byte	.LFE1
 1047 0038 00000000 		.4byte	.LFB0
 1048 003c 1C000000 		.4byte	.LFE0
 1049 0040 00000000 		.4byte	.LFB8
 1050 0044 0C000000 		.4byte	.LFE8
 1051 0048 00000000 		.4byte	.LFB9
 1052 004c 0C000000 		.4byte	.LFE9
 1053 0050 00000000 		.4byte	.LFB10
 1054 0054 0C000000 		.4byte	.LFE10
 1055 0058 00000000 		.4byte	.LFB11
 1056 005c 0C000000 		.4byte	.LFE11
 1057 0060 00000000 		.4byte	.LFB12
 1058 0064 0C000000 		.4byte	.LFE12
 1059 0068 00000000 		.4byte	0
 1060 006c 00000000 		.4byte	0
 1061              		.section	.debug_line,"",%progbits
 1062              	.Ldebug_line0:
 1063 0000 3C010000 		.section	.debug_str,"MS",%progbits,1
 1063      02004800 
 1063      00000201 
 1063      FB0E0D00 
 1063      01010101 
 1064              	.LASF19:
 1065 0000 5247425F 		.ascii	"RGB_PWM_red_WritePeriod\000"
 1065      50574D5F 
 1065      7265645F 
 1065      57726974 
 1065      65506572 
 1066              	.LASF21:
 1067 0018 70657269 		.ascii	"period\000"
 1067      6F6400
 1068              	.LASF18:
 1069 001f 5247425F 		.ascii	"RGB_PWM_red_WriteCounter\000"
 1069      50574D5F 
 1069      7265645F 
 1069      57726974 
 1069      65436F75 
 1070              	.LASF3:
 1071 0038 73686F72 		.ascii	"short unsigned int\000"
 1071      7420756E 
 1071      7369676E 
 1071      65642069 
 1071      6E7400
 1072              	.LASF24:
 1073 004b 5247425F 		.ascii	"RGB_PWM_red_Init\000"
 1073      50574D5F 
 1073      7265645F 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 36


 1073      496E6974 
 1073      00
 1074              	.LASF28:
 1075 005c 5247425F 		.ascii	"RGB_PWM_red_WriteControlRegister\000"
 1075      50574D5F 
 1075      7265645F 
 1075      57726974 
 1075      65436F6E 
 1076              	.LASF9:
 1077 007d 666C6F61 		.ascii	"float\000"
 1077      7400
 1078              	.LASF20:
 1079 0083 636F756E 		.ascii	"counter\000"
 1079      74657200 
 1080              	.LASF1:
 1081 008b 756E7369 		.ascii	"unsigned char\000"
 1081      676E6564 
 1081      20636861 
 1081      7200
 1082              	.LASF34:
 1083 0099 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1083      43313120 
 1083      352E342E 
 1083      31203230 
 1083      31363036 
 1084 00cc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1084      20726576 
 1084      6973696F 
 1084      6E203233 
 1084      37373135 
 1085 00ff 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1085      66756E63 
 1085      74696F6E 
 1085      2D736563 
 1085      74696F6E 
 1086              	.LASF13:
 1087 0127 72656738 		.ascii	"reg8\000"
 1087      00
 1088              	.LASF5:
 1089 012c 6C6F6E67 		.ascii	"long unsigned int\000"
 1089      20756E73 
 1089      69676E65 
 1089      6420696E 
 1089      7400
 1090              	.LASF38:
 1091 013e 5247425F 		.ascii	"RGB_PWM_red_initVar\000"
 1091      50574D5F 
 1091      7265645F 
 1091      696E6974 
 1091      56617200 
 1092              	.LASF12:
 1093 0152 75696E74 		.ascii	"uint8\000"
 1093      3800
 1094              	.LASF29:
 1095 0158 636F6E74 		.ascii	"control\000"
 1095      726F6C00 
 1096              	.LASF37:
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 37


 1097 0160 5247425F 		.ascii	"RGB_PWM_red_ReadControlRegister\000"
 1097      50574D5F 
 1097      7265645F 
 1097      52656164 
 1097      436F6E74 
 1098              	.LASF30:
 1099 0180 5247425F 		.ascii	"RGB_PWM_red_ReadCounter\000"
 1099      50574D5F 
 1099      7265645F 
 1099      52656164 
 1099      436F756E 
 1100              	.LASF16:
 1101 0198 5247425F 		.ascii	"RGB_PWM_red_Enable\000"
 1101      50574D5F 
 1101      7265645F 
 1101      456E6162 
 1101      6C6500
 1102              	.LASF10:
 1103 01ab 646F7562 		.ascii	"double\000"
 1103      6C6500
 1104              	.LASF17:
 1105 01b2 5247425F 		.ascii	"RGB_PWM_red_Stop\000"
 1105      50574D5F 
 1105      7265645F 
 1105      53746F70 
 1105      00
 1106              	.LASF32:
 1107 01c3 5247425F 		.ascii	"RGB_PWM_red_ReadCompare\000"
 1107      50574D5F 
 1107      7265645F 
 1107      52656164 
 1107      436F6D70 
 1108              	.LASF8:
 1109 01db 756E7369 		.ascii	"unsigned int\000"
 1109      676E6564 
 1109      20696E74 
 1109      00
 1110              	.LASF31:
 1111 01e8 5247425F 		.ascii	"RGB_PWM_red_ReadCapture\000"
 1111      50574D5F 
 1111      7265645F 
 1111      52656164 
 1111      43617074 
 1112              	.LASF35:
 1113 0200 47656E65 		.ascii	"Generated_Source\\PSoC5\\RGB_PWM_red.c\000"
 1113      72617465 
 1113      645F536F 
 1113      75726365 
 1113      5C50536F 
 1114              	.LASF7:
 1115 0225 6C6F6E67 		.ascii	"long long unsigned int\000"
 1115      206C6F6E 
 1115      6720756E 
 1115      7369676E 
 1115      65642069 
 1116              	.LASF27:
 1117 023c 72657375 		.ascii	"result\000"
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 38


 1117      6C7400
 1118              	.LASF26:
 1119 0243 6374726C 		.ascii	"ctrl\000"
 1119      00
 1120              	.LASF15:
 1121 0248 73697A65 		.ascii	"sizetype\000"
 1121      74797065 
 1121      00
 1122              	.LASF6:
 1123 0251 6C6F6E67 		.ascii	"long long int\000"
 1123      206C6F6E 
 1123      6720696E 
 1123      7400
 1124              	.LASF25:
 1125 025f 5247425F 		.ascii	"RGB_PWM_red_Start\000"
 1125      50574D5F 
 1125      7265645F 
 1125      53746172 
 1125      7400
 1126              	.LASF11:
 1127 0271 63686172 		.ascii	"char\000"
 1127      00
 1128              	.LASF22:
 1129 0276 5247425F 		.ascii	"RGB_PWM_red_WriteCompare\000"
 1129      50574D5F 
 1129      7265645F 
 1129      57726974 
 1129      65436F6D 
 1130              	.LASF2:
 1131 028f 73686F72 		.ascii	"short int\000"
 1131      7420696E 
 1131      7400
 1132              	.LASF33:
 1133 0299 5247425F 		.ascii	"RGB_PWM_red_ReadPeriod\000"
 1133      50574D5F 
 1133      7265645F 
 1133      52656164 
 1133      50657269 
 1134              	.LASF4:
 1135 02b0 6C6F6E67 		.ascii	"long int\000"
 1135      20696E74 
 1135      00
 1136              	.LASF14:
 1137 02b9 6C6F6E67 		.ascii	"long double\000"
 1137      20646F75 
 1137      626C6500 
 1138              	.LASF0:
 1139 02c5 7369676E 		.ascii	"signed char\000"
 1139      65642063 
 1139      68617200 
 1140              	.LASF23:
 1141 02d1 636F6D70 		.ascii	"compare\000"
 1141      61726500 
 1142              	.LASF36:
 1143 02d9 453A5C4E 		.ascii	"E:\\New_Dell_Laptop_18.04.2021\\Drive_D\\hda\\Summe"
 1143      65775F44 
 1143      656C6C5F 
ARM GAS  C:\Users\Reza\AppData\Local\Temp\ccHE15tZ.s 			page 39


 1143      4C617074 
 1143      6F705F31 
 1144 0308 725F5365 		.ascii	"r_Semester_2020\\Embedded Architecture and Applicat"
 1144      6D657374 
 1144      65725F32 
 1144      3032305C 
 1144      456D6265 
 1145 033a 696F6E5C 		.ascii	"ion\\Lab1\\Work_Space_RTE\\RTE_Electronic_Clock.cyd"
 1145      4C616231 
 1145      5C576F72 
 1145      6B5F5370 
 1145      6163655F 
 1146 036a 736E00   		.ascii	"sn\000"
 1147              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
